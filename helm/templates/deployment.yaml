{{- $releaseName := .Release.Name -}}
{{- $chartName := include "gateway.name" . -}}
{{- $cloudProviderFlavor := include "gateway.cloudProviderFlavor" . -}}
{{- $cloudProviderDockerRegistryUrl := include "gateway.cloudProviderDockerRegistryUrl" . -}}
{{- $cloudProviderImagePullSecretName := include "gateway.cloudProviderImagePullSecretName" . -}}
apiVersion: apps/v1
kind: Deployment
metadata: 
  name: {{ $releaseName }}-gateway
  labels:
    app: {{ $chartName }}-gateway
    environment: {{ include "gateway.environment" . }}
    chart: {{ $chartName }}-gateway
    release: {{ $releaseName }}
{{- $splunk := (include "common.splunk.merged" . ) | fromYaml }}
{{- if $splunk.enabled}}
{{- with $splunk.annotations }}
  annotations:
{{ toYaml . | indent 4 }}
{{- end }}
{{- end }}
spec:
  replicas: {{ default 1 .Values.replicaCount | int }}
  selector:
    matchLabels:
      app: {{ $chartName }}-gateway
      release: {{ $releaseName }}
      run: {{ $releaseName }}-gateway
      {{- include "gateway.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: {{ $chartName }}-gateway
        release: {{ $releaseName }}
        run: {{ $releaseName }}-gateway
        {{- include "gateway.selectorLabels" . | nindent 8 }}
      {{- if .Values.resetOnConfigChange }}
      annotations:
        checksum/configmap: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      {{- end }}
    spec:
    {{- if $cloudProviderImagePullSecretName }}
      imagePullSecrets:
        - name: {{ $cloudProviderImagePullSecretName | quote }}
    {{- end }}
      containers:
        - name: {{ $releaseName }}-gateway-deployment
          {{- with .Values.image }}
          image: {{ $cloudProviderDockerRegistryUrl }}{{ .repository }}:{{ .tag }}
          {{- end }}
          volumeMounts: 
          {{- $providers := (include "common.providers.merged" . ) | fromYaml }}
            {{- if eq $providers.source "NFS" }}
            {{- $NFS := (include "common.NFS.merged" . ) | fromYaml }}
            - name: ingestion-source-storage
              mountPath: {{ $NFS.source.pv_path }}
              subPath: {{ $NFS.source.sub_path }}
            {{- end }}
            {{- $ca := (include "common.ca.merged" . ) | fromYaml }}
            {{- if $ca.enabled }}
            - mountPath: {{ printf "%s/%s" $ca.path $ca.key | quote }}
              name: root-ca
              subPath: {{ quote $ca.key }}
            {{- end }}
          envFrom:
            - configMapRef:
                name: {{ .Release.Name }}-{{ $chartName }}-configmap  
            - configMapRef:
                name: {{ .Release.Name }}-{{ $chartName }}-configmap
          ports:
            - containerPort: {{ .Values.env.targetPort | int }}
          livenessProbe:
            initialDelaySeconds: {{ .Values.initialDelaySeconds }}
            httpGet: 
              path: /liveness
              port: {{ .Values.env.targetPort }}
            timeoutSeconds: 20
            periodSeconds: 30
          # readinessProbe:
          #   httpGet:
          #     path: /readiness
          #     port: {{ .Values.env.targetPort }}
          {{- if .Values.resources.enabled }}
          resources:
            {{- toYaml .Values.resources.value | nindent 12 }}
          {{- end }}
      volumes:
        {{- if eq $providers.source "NFS" }}
        - name: ingestion-source-storage
        {{- $NFS := (include "common.NFS.merged" . ) | fromYaml }}
          persistentVolumeClaim:
            claimName: {{ $NFS.source.name }}
        {{- end }}
        {{- if $ca.enabled }}
        - name: root-ca
          secret:
            secretName: {{ $ca.secretName }}
      {{- if .Values.sidecars }}
      {{ tpl (.Values.sidecars) . | nindent 8 }}
      {{- end }}
    {{- end }}
